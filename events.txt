In JavaScript, events are actions or occurrences that happen in the system you're programming, such as a user interacting with a webpage or browser. 
JavaScript provides the ability to capture and respond to these events, making webpages interactive.

1. What is an Event?
An event is something that the browser reacts to. Events are typically generated by user actions like clicking a button, moving the mouse, pressing a key, etc. 
These events can be captured using JavaScript, allowing us to define behaviors or responses when they occur.

2. Common Event Types
Mouse Events: Triggered by mouse actions.

click: Occurs when the mouse is clicked.
dblclick: Occurs when the mouse is double-clicked.
mouseover: Occurs when the mouse pointer is over an element.
mouseout: Occurs when the mouse pointer leaves an element.
mousemove: Occurs when the mouse pointer moves over an element.
Keyboard Events: Triggered by keyboard actions.

keydown: Occurs when a key is pressed.
keyup: Occurs when a key is released.
keypress: Occurs when a key is pressed and released.
Form Events: Triggered by interactions with form elements.

submit: Occurs when a form is submitted.
change: Occurs when the value of a form element changes.
focus: Occurs when an element gains focus.
blur: Occurs when an element loses focus.
Window Events:

load: Occurs when the page finishes loading.
resize: Occurs when the window is resized.
scroll: Occurs when the page is scrolled.
3. Event Handling in JavaScript
To handle events, you need to add an event listener to an element. Event listeners are functions that are called when a specified event occurs.

4. Ways to Attach Event Listeners
a. Inline Event Handlers (Not Recommended)
You can add event handling directly in HTML using attributes like onclick, onmouseover, etc.

<button onclick="alert('Button clicked!')">Click Me</button>


This method is not recommended because it mixes HTML and JavaScript and can lead to maintenance problems.

b. Using addEventListener (Recommended)
This is the preferred way of handling events in JavaScript, as it allows you to separate HTML and JavaScript, and attach multiple events to the same element.

// Find the element
let button = document.getElementById("myButton");

// Add event listener
button.addEventListener("click", function() {
    alert("Button clicked!");
});


c. Using onclick Property
You can also set the onclick property directly in JavaScript (though addEventListener is preferred).

let button = document.getElementById("myButton");
button.onclick = function() {
    alert("Button clicked!");
};


5. Event Listener Example with Different Events
Let's look at a few examples of common event listeners:

Example 1: Click Event

<button id="clickBtn">Click Me!</button>
<script>
    let button = document.getElementById("clickBtn");
    button.addEventListener("click", function() {
        alert("Button clicked!");
    });
</script>


This will trigger an alert when the button is clicked.

Example 2: Mouse Events (mouseover, mouseout)

<div id="hoverDiv" style="width: 200px; height: 200px; background-color: lightblue;">
    Hover over me!
</div>
<script>
    let div = document.getElementById("hoverDiv");

    // Mouse over
    div.addEventListener("mouseover", function() {
        div.style.backgroundColor = "yellow"; // Change color on hover
    });

    // Mouse out
    div.addEventListener("mouseout", function() {
        div.style.backgroundColor = "lightblue"; // Revert color when mouse leaves
    });
</script>


This example changes the background color when the mouse hovers over and leaves the div.

Example 3: Keyboard Event (keydown)

<input type="text" id="inputField" placeholder="Type something here">
<script>
    let input = document.getElementById("inputField");

    // Listen for keydown event
    input.addEventListener("keydown", function(event) {
        console.log("Key pressed: " + event.key); // Logs the key that was pressed
    });
</script>


Example 4: Form Submit Event

<form id="myForm">
    <input type="text" id="nameField" placeholder="Enter your name">
    <button type="submit">Submit</button>
</form>
<script>
    let form = document.getElementById("myForm");

    form.addEventListener("submit", function(event) {
        event.preventDefault(); // Prevents the form from submitting
        alert("Form submitted!");
    });
</script>


Example 5: Window Events (load and resize)

<script>
    // Window load event
    window.addEventListener("load", function() {
        console.log("Page loaded!");
    });

    // Window resize event
    window.addEventListener("resize", function() {
        console.log("Window resized!");
    });
</script>


6. Event Object
When an event is triggered, an event object is automatically passed to the event handler. This object contains information about the event, 
such as the type of event and the target element.

Example:

document.getElementById("myButton").addEventListener("click", function(event) {
    console.log("Event type: " + event.type); // Output: click
    console.log("Target element: " + event.target.id); // Output: myButton
});


The event.target gives you the element that triggered the event, and event.type gives you the type of event.

7. Removing Event Listeners
You can also remove an event listener using removeEventListener:

let button = document.getElementById("myButton");

function handleClick() {
    alert("Button clicked!");
}

// Adding event listener
button.addEventListener("click", handleClick);

// Removing event listener
button.removeEventListener("click", handleClick);
